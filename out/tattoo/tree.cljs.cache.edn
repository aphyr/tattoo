{:use-macros nil, :excludes #{}, :name tattoo.tree, :imports nil, :requires nil, :uses nil, :defs {log {:protocol-inline nil, :meta {:file "/home/aphyr/tattoo/src/tattoo/tree.cljs", :line 3, :column 7, :end-line 3, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name tattoo.tree/log, :variadic true, :file "src/tattoo/tree.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, ids {:protocol-inline nil, :meta {:file "/home/aphyr/tattoo/src/tattoo/tree.cljs", :line 7, :column 7, :end-line 7, :end-column 10, :arglists (quote ([t] [t id])), :doc "Assign unique numbers to all tree nodes.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([t] [t id]), :arglists ([t] [t id]), :arglists-meta (nil nil)}}, :name tattoo.tree/ids, :variadic false, :file "src/tattoo/tree.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([t] [t id]), :arglists ([t] [t id]), :arglists-meta (nil nil)}, :method-params ([t] [t id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists ([t] [t id]), :doc "Assign unique numbers to all tree nodes."}, with-relationships {:protocol-inline nil, :meta {:file "/home/aphyr/tattoo/src/tattoo/tree.cljs", :line 22, :column 7, :end-line 22, :end-column 25, :arglists (quote ([t])), :doc "Given a node, augments its children with :parent, :before,\n  and :after siblings."}, :name tattoo.tree/with-relationships, :variadic false, :file "src/tattoo/tree.cljs", :end-column 25, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Given a node, augments its children with :parent, :before,\n  and :after siblings."}, without-relationships {:protocol-inline nil, :meta {:file "/home/aphyr/tattoo/src/tattoo/tree.cljs", :line 35, :column 7, :end-line 35, :end-column 28, :arglists (quote ([t])), :doc "Strips relationships off of a node."}, :name tattoo.tree/without-relationships, :variadic false, :file "src/tattoo/tree.cljs", :end-column 28, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Strips relationships off of a node."}, recurse {:protocol-inline nil, :meta {:file "/home/aphyr/tattoo/src/tattoo/tree.cljs", :line 40, :column 7, :end-line 40, :end-column 14, :arglists (quote ([t f])), :doc "Lays out children using f."}, :name tattoo.tree/recurse, :variadic false, :file "src/tattoo/tree.cljs", :end-column 14, :method-params ([t f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t f])), :doc "Lays out children using f."}, sexp->tree {:protocol-inline nil, :meta {:file "/home/aphyr/tattoo/src/tattoo/tree.cljs", :line 48, :column 7, :end-line 48, :end-column 17, :arglists (quote ([sexp])), :doc "Converts sexprs to a tree."}, :name tattoo.tree/sexp->tree, :variadic false, :file "src/tattoo/tree.cljs", :end-column 17, :method-params ([sexp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sexp])), :doc "Converts sexprs to a tree."}, tree->dtree {:protocol-inline nil, :meta {:file "/home/aphyr/tattoo/src/tattoo/tree.cljs", :line 56, :column 7, :end-line 56, :end-column 18, :arglists (quote ([t])), :doc "Turns a tree into a dynamic tree with atoms for :x and :y coords."}, :name tattoo.tree/tree->dtree, :variadic false, :file "src/tattoo/tree.cljs", :end-column 18, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Turns a tree into a dynamic tree with atoms for :x and :y coords."}, dtree->tree {:protocol-inline nil, :meta {:file "/home/aphyr/tattoo/src/tattoo/tree.cljs", :line 64, :column 7, :end-line 64, :end-column 18, :arglists (quote ([t])), :doc "Turns a dynamic tree back into a plain old static tree."}, :name tattoo.tree/dtree->tree, :variadic false, :file "src/tattoo/tree.cljs", :end-column 18, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t])), :doc "Turns a dynamic tree back into a plain old static tree."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :children :parent :symbol :after :id :x :before}, :order [:children :id :parent :before :after :symbol :x :y]}, :doc nil}